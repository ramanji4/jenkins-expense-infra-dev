pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['Apply', 'Destroy'], description: 'Select Action')
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 10-sg
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('Apply or Destroy') {
            input {
                message "Should we continue to ${params.ACTION}?"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 10-sg
                        if [ "${params.ACTION}" = "Apply" ]
                        then
                            terraform apply -auto-approve tfplan
                        else
                            terraform destroy -auto-approve
                        fi
                    """
                }
            }
        }
    }

    post {
        always{
            echo "This sections runs always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
}